{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","components/UserList/UserList.js","pages/Home/style.js","pages/Home/Home.js","hooks/usePeopleFetch.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","component","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","FormControlLabel","control","Checkbox","checked","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","users","isLoading","page","setPage","fetchUsers","useState","hoveredUserId","setHoveredUserId","filteredCountries","setFilteredCountries","savedFavUsers","JSON","parse","localStorage","getItem","favUsers","setFavUsers","console","log","handleMouseLeave","useEffect","setItem","stringify","handeleCheckBoxClick","val","tmpFilteredCountries","index","indexOf","length","splice","push","userToShow","checkUserLike","user","i","id","onScroll","e","target","scrollHeight","scrollTop","clientHeight","filter","includes","nat","map","onMouseEnter","handleMouseEnter","onMouseLeave","onClick","tmpFavUsers","filrterArr","favUser","favIndex","handleClick","src","picture","large","alt","name","title","first","last","email","location","street","number","city","country","IconButton","Home","Content","Header","setUsers","setIsLoading","a","axios","get","then","response","newUsersData","data","results","catch","error","alert","usePeopleFetch","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","type","primary","main","CssBaseline","NavBar","props","savedTabIndex","setValue","handleTabSet","AppBar","position","style","top","Tabs","_e","newValue","aria-label","indicatorColor","textColor","Tab","AppRouter","tabIndex","setTabIndex","exact","path","render","isAuthed","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.a10e0398.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography component={'span'}>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import React, { useState }from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\r\n\r\n  const handleChange = () => {\r\n    onChange && onChange(value); \r\n    // console.log('value:',value)\r\n  };\r\n\r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\n\r\n\r\nconst UserList = ({ users, isLoading, page, setPage, fetchUsers }) => {\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n  const [filteredCountries, setFilteredCountries] = useState([]);\r\n  /**\r\n   * Saving and fetch the favorite users array in/from local storage\r\n   */\r\n  const savedFavUsers = JSON.parse(localStorage.getItem('favUsers'));\r\n  const [favUsers, setFavUsers] = useState(savedFavUsers || []);\r\n\r\n  console.log('users:', users);\r\n\r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('favUsers', JSON.stringify(favUsers));\r\n  }, [favUsers]);\r\n\r\n  /**\r\n   * @param {*} val \r\n   * @returns array of checked checkbox (countries)\r\n   */\r\n  const handeleCheckBoxClick = ({ val, filteredCountries, setFilteredCountries }) => {\r\n    let tmpFilteredCountries = JSON.parse(JSON.stringify(filteredCountries));\r\n    let index = tmpFilteredCountries.indexOf(val);\r\n    if (tmpFilteredCountries.length > 0 && index > -1) {\r\n      tmpFilteredCountries.splice(index, 1)\r\n    } else {\r\n      tmpFilteredCountries.push(val);\r\n    }\r\n    setFilteredCountries(tmpFilteredCountries);\r\n  }\r\n\r\n  /**\r\n   * @param {*} user \r\n   * @returns true if the user nat exsist in filteredCountries array or if the filteredCountries array is empty(no selected checkboxes), otherwise returns false   \r\n   */\r\n  const filterUsersByCountry = (user) => filteredCountries.length === 0 || filteredCountries.includes(user.nat); // add memozation?\r\n\r\n  /**\r\n   * @param {*} user \r\n   * @returns array of favorite users\r\n   */\r\n  const handleClick = (user) => {\r\n    let tmpFavUsers = JSON.parse(JSON.stringify(favUsers));\r\n    let filrterArr = tmpFavUsers.filter(favUser => favUser.id?.value === user.id?.value);\r\n    let favIndex = tmpFavUsers.indexOf(filrterArr[0]); // some times indexOf will not find the needed object (by referens)\r\n    if (tmpFavUsers.length > 0 && favIndex > -1) {\r\n      tmpFavUsers.splice(favIndex, 1);\r\n    } else {\r\n      tmpFavUsers.push(user);\r\n    }\r\n    setFavUsers(tmpFavUsers);\r\n\r\n  }\r\n\r\n  /**\r\n  * get the fav-tab index from local storage \r\n  * cheking the page index if its 1: render only the fav users else render the all users arr \r\n  */\r\n  const tabIndex = localStorage.getItem('value');\r\n  const userToShow = tabIndex === \"1\" ? favUsers : users;\r\n\r\n  /**\r\n   * @param {*} user \r\n   * @returns true if the user in favUsers array \r\n   */\r\n  const checkUserLike = (user, favUsers) => {\r\n    if (favUsers.length > 0) {\r\n      for (let i = 0; i < favUsers.length; i++) {\r\n        let favUsersId = favUsers[i].id?.value;\r\n        if (favUsersId === user.id?.value) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const handleScroll = (e) => {\r\n    var bottom = e.target.scrollHeight - e.target.scrollTop - e.target.clientHeight < 50;\r\n    if (bottom) {\r\n      if (!isLoading) {\r\n        let pg = page + 1;\r\n        setPage(pg);\r\n        fetchUsers();\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <S.UserList>\r\n      <S.Filters>\r\n        <CheckBox value=\"BR\" label=\"Brazil\" onChange={(val) => handeleCheckBoxClick({ val, filteredCountries, setFilteredCountries })} />\r\n        <CheckBox value=\"AU\" label=\"Australia\" onChange={(val) => handeleCheckBoxClick({ val, filteredCountries, setFilteredCountries })} />\r\n        <CheckBox value=\"CA\" label=\"Canada\" onChange={(val) => handeleCheckBoxClick({ val, filteredCountries, setFilteredCountries })} />\r\n        <CheckBox value=\"DE\" label=\"Germany\" onChange={(val) => handeleCheckBoxClick({ val, filteredCountries, setFilteredCountries })} />\r\n        <CheckBox value=\"ES\" label=\"Spain\" onChange={(val) => handeleCheckBoxClick({ val, filteredCountries, setFilteredCountries })} />\r\n      </S.Filters>\r\n      <S.List onScroll={handleScroll}>\r\n        {userToShow.filter(filterUsersByCountry).map((user, index) => {\r\n          return (\r\n            <S.User\r\n              key={index}\r\n              onMouseEnter={() => handleMouseEnter(index)}\r\n              onMouseLeave={handleMouseLeave}\r\n              onClick={() => handleClick(user)}\r\n            >\r\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n              <S.UserInfo>\r\n                <Text size=\"22px\" bold>\r\n                  {user?.name.title} {user?.name.first} {user?.name.last}\r\n                </Text>\r\n                <Text size=\"14px\">{user?.email}</Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.street.number} {user?.location.street.name}\r\n                </Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.city} {user?.location.country}\r\n                </Text>\r\n              </S.UserInfo>\r\n              <S.IconButtonWrapper isVisible={index === hoveredUserId || checkUserLike(user, favUsers)} >\r\n                <IconButton>\r\n                  <FavoriteIcon color=\"error\" />\r\n                </IconButton>\r\n              </S.IconButtonWrapper>\r\n            </S.User>\r\n          );\r\n        })}\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default UserList;","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport * as S from \"./style\";\r\n\r\n\r\nconst Home = () => {\r\n  const { users, isLoading, page, setPage, fetchUsers } = usePeopleFetch();\r\n\r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n          <UserList users={users} isLoading={isLoading} page={page} setPage={setPage} fetchUsers={fetchUsers}/>\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const usePeopleFetch = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [page, setPage] = useState(1)\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  async function fetchUsers() {\r\n    setIsLoading(true);\r\n    await axios.get(`https://randomuser.me/api/?results=25&page=${page}`)\r\n      .then(response => {\r\n        setIsLoading(false);\r\n        if(page > 1){\r\n          let newUsersData = [...users, ...response.data.results];\r\n          setUsers(newUsersData);\r\n        }else{\r\n          setUsers(response.data.results);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        alert('Axios GET request failed')\r\n      })\r\n  }\r\n\r\n  return { users, isLoading, page, setPage ,fetchUsers };\r\n\r\n};","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\"\r\n\r\n\r\nconst NavBar = (props) => {\r\n  const savedTabIndex = JSON.parse(localStorage.getItem('value'));\r\n  const [value, setValue] = useState(savedTabIndex || 0);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('value', JSON.stringify(value));\r\n    props.handleTabSet(value);\r\n  }, [value]);\r\n\r\n  const handleChange = (_e, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n \r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab label=\"Home\" index={0} />\r\n        <Tab label=\"Favorites\" index={1} />\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import React, {useState} from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home } from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\n\r\nconst AppRouter = () => {\r\n  const [tabIndex, setTabIndex] = useState(\"\");\r\n\r\n  const handleTabSet = (value) => {\r\n    setTabIndex(value);\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n        <NavBar handleTabSet={handleTabSet}/>\r\n        <Switch>\r\n          <Route exact path=\"/\" render={(props) => (\r\n            <Home {...props} isAuthed={true} tabIndex={tabIndex} />\r\n          )} />\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}